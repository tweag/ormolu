Found .cabal file hlint.cabal, but it did not mention Setup.hs
Found .cabal file hlint.cabal, but it did not mention data/HLint_QuickCheck.hs
Found .cabal file hlint.cabal, but it did not mention data/HLint_TypeCheck.hs
Found .cabal file hlint.cabal, but it did not mention data/Test.hs
src/Extension.hs
@@ -17,6 +17,7 @@
           UnboxedTuples,
           UnboxedSums, -- breaks (#) lens operator
           QuasiQuotes, -- breaks [x| ...], making whitespace free list comps break
-          {- DoRec , -} RecursiveDo, -- breaks rec
+          {- DoRec , -}
+          RecursiveDo, -- breaks rec
           LexicalNegation -- changes '-', see https://github.com/ndmitchell/hlint/issues/1230
         ]

  Formatting is not idempotent.
  Please, consider reporting the bug.
src/Hint/Bracket.hs
@@ -263,8 +263,11 @@
                 let y = noLoc $ HsApp noExtField a1 (noLoc (HsPar noExtField a2)),
                 let r = Replace Expr (toSS e) [("a", toSS a1), ("b", toSS a2)] "a (b)"
             ]
-         ++ [ (suggest "Redundant bracket" x y [r]) {ideaSpan -- Special case of (v1 . v2) <$> v3
-                                                     = locPar}
+         ++ [ (suggest "Redundant bracket" x y [r])
+                { ideaSpan -- Special case of (v1 . v2) <$> v3
+                  =
+                    locPar
+                }
               | L _ (OpApp _ (L locPar (HsPar _ o1@(L locNoPar (OpApp _ _ (isDot -> True) _)))) o2 v3) <- [x],
                 varToStr o2 == "<$>",
                 let y = noLoc (OpApp noExtField o1 o2 v3) :: LHsExpr GhcPs,

  Formatting is not idempotent.
  Please, consider reporting the bug.
