name: Build binaries
on:
  release:
    types: [published]
defaults:
  run:
    shell: bash
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            targetOs: Linux
          - os: macOS-latest
            targetOs: macOS
          - os: ubuntu-latest
            targetOs: Windows
    name: Build binary for ${{ matrix.targetOs }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v13
        with:
          extra_nix_config: |
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
            substituters = https://cache.nixos.org https://hydra.iohk.io
      - name: Build binary
        run: nix-build -A binaries.${{ matrix.targetOS }}
      - name: Prepare upload
        run: |
          cd result/bin
          7z a -l ${{ github.workspace }}/ormolu.zip .
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ormolu.zip
          asset_name: ormolu-${{ matrix.targetOs }}.zip
          asset_content_type: application/zip
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    name: Test built binaries
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - name: Download and extract binary
        run: |
          curl -sL https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/ormolu-${{ runner.os }}.zip > ormolu.zip
          7z e ormolu.zip
      - name: Basic functionality tests
        run: |
          ./ormolu --version
          echo "data A = A" > test.hs
          ./ormolu -m check test.hs
